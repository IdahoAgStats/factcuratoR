% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_variety_create_new_names_module.R
\name{process_std_new_names}
\alias{process_std_new_names}
\title{Process standardized new names that were created from process_fuzzymatch()}
\usage{
process_std_new_names(output_nomatch_df, auxiliary_files, filename)
}
\arguments{
\item{output_nomatch_df}{The 'nomatch' data.frame created from process_fuzzymatch}
}
\description{
Once the user checks the new names, they can be read in and processed.
The names are checked against the names that still need matches after fuzzymatching
(contained in matches_temp_list) and this function:
\enumerate{
\item Writes out a csv with a message to update the auxiliary/standardize_new_names*.csv
(New names to standardize arise when the is_truematch status in the fuzzymatching stage
moves from 'check' to 'TRUE' or 'FALSE')
\item Writes out a csv with message to add it to the cultivar database
\item Writes out another csv with message to add it to the cv_rename.csv file
Note: This function comes after fuzzymatching, just like create_new_db_entries().
create_new_db_entries() will not be deprecated because it is used in neely_curation/cultivar
but it processes the standardized new names in a way that is unnecessary (finds aliases).
Also, this function allows for iterations through the matching process.
}
}
